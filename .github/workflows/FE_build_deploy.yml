# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Knowix FE Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  GAR_LOCATION: us-central1
  GKE_CLUSTER: knowix-cluster
  GKE_ZONE: us-central1-c
  DEPLOYMENT_NAME: git-gke-deploy
  REPOSITORY: knowix-repo
  IMAGE: knowix_frontend

jobs:
  build-deploy:
    name: Setup, Build, Publish and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout 🛎️ 
        uses: actions/checkout@v4

      - id: 'auth'
        name: Setup 📑 gcp auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Setup 📑 Cloud SDK
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Setup 📑 Docker configuration
        run: |-
          gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev --quiet

      - name: Setup 📑 Config file
        run: mv src/environments/config-prod.js src/config.js

      - name: Setup 📑 GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: 'knowix-cluster'
          location: 'us-central1'
      
      - name: Build 🔧 Docker image
        run: docker build --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE" .

      - name: Publish to Artifact registry 🧾
        run: |-
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE"

      - name: Deploy 🚀 
        run: |-
          kubectl delete deployment knowix-frontend
          kubectl apply -f knowix-frontend.yaml
          kubectl get services -o wide
          kubectl get deployments
  
